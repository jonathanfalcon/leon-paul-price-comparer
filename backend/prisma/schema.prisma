generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Start `enum`

// Defines all valid product types. See `types/Common/ProductType.ts`.
enum ProductType {
  simple
  configurable
  bundle
}

// Defines all country codes. See `types/Common/RegionCodes.ts`.
enum CountryCode {
  AUS
  CAN
  DEU
  FRA
  ITA
  GBR
  UKR
  USA
}
// Start `model`

// This is where common product data is stored. The Product table closely resembles type LeonPaulCartItemBase in `types/AppData/LeonPaulCart/LeonPaulCart.ts`
model Product {
  sku         String      @id @unique
  imageUrl    String
  lastFetch   Int
  productType ProductType

  // Define one-to-many relationship with RegionalProductData table
  RegionalProductData RegionalProductData[]
}

// This is where regional product data is stored. The RegionalProductData table closely resembles types in union type LeonPaulProduct in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData {
  sku                                        String
  country                                    CountryCode
  itemName                                   String
  url                                        String
  price_beforeTax                            Float
  price_afterTax                             Float
  // Define foreign key relationship to Product table
  Product                                    Product                                      @relation(fields: [sku], references: [sku])
  // Define one-to-many relationship with RegionalProductData_Configurable_Product table
  RegionalProductData_Configurable_Product   RegionalProductData_Configurable_Product[]
  // Define one-to-many relationship with RegionalProductData_Configurable_Attribute table
  RegionalProductData_Configurable_Attribute RegionalProductData_Configurable_Attribute[]
  // Define one-to-many relationship with RegionalProductData_Bundle_Option table
  RegionalProductData_Bundle_Option          RegionalProductData_Bundle_Option[]

  // Define composite primary key
  @@id([sku, country])
  @@unique([sku, country])
}

// This is where regional product configuration data when `productType: 'configurable'` is stored. This table closely resembles type CartItemProduct in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData_Configurable_Product {
  sku                                                       String
  country                                                   CountryCode
  productId                                                 String
  price_beforeTax                                           Float
  price_afterTax                                            Float
  // Define foreign key relationship to RegionalProductData table
  RegionalProductData                                       RegionalProductData                                         @relation(fields: [sku, country], references: [sku, country])
  // Define one-to-many relationship with RegionalProductData_Configurable_Products_OptionSelection table
  RegionalProductData_Configurable_Product_OptionSelection RegionalProductData_Configurable_Product_OptionSelection[]

  // Define composite primary key
  @@id([sku, country, productId])
  @@unique([sku, country, productId])
}

// This is where regional product configuration data regarding selections is stored. This table closely resembles property `optionSelection` in type CartItemProduct in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData_Configurable_Product_OptionSelection {
  sku                                      String
  country                                  CountryCode
  productId                                String
  attributeId                              String
  optionId                                 String
  // Define foreign key relationship to RegionalProductData_Configurable_Product table
  RegionalProductData_Configurable_Product RegionalProductData_Configurable_Product @relation(fields: [sku, country, productId], references: [sku, country, productId])

  // Define composite primary key
  @@id([sku, country, productId, attributeId, optionId])
  @@unique([sku, country, productId, attributeId, optionId])
}

// This is where regional product attribute data when `productType: 'configurable'` is stored. This table closely resembles type CartItemAttribute in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData_Configurable_Attribute {
  sku                                                String
  country                                            CountryCode
  attributeName                                      String
  attributeId                                        String
  // Define foreign key relationship to RegionalProductData table
  RegionalProductData                                RegionalProductData                                  @relation(fields: [sku, country], references: [sku, country])
  // Define one-to-many relationship with RegionalProductData_Configurable_Attribute_Option table
  RegionalProductData_Configurable_Attribute_Option RegionalProductData_Configurable_Attribute_Option[]

  // Define composite primary key
  @@id([sku, country, attributeId])
  @@unique([sku, country, attributeId])
}

// This is where regional product attribute options data. This table closely resembles type CartItemAttributeOption in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData_Configurable_Attribute_Option {
  sku                                        String
  country                                    CountryCode
  attributeId                                String
  optionName                                 String
  optionId                                   String
  // Define foreign key relationship to RegionalProductData_Configurable_Attribute table
  RegionalProductData_Configurable_Attribute RegionalProductData_Configurable_Attribute @relation(fields: [sku, country, attributeId], references: [sku, country, attributeId])

  // Define composite primary key
  @@id([sku, country, attributeId, optionId])
  @@unique([sku, country, attributeId, optionId])
}

// This is where regional product bundle options data when `productType: 'bundle'` is stored. This table closely resembles type CartItemOption in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData_Bundle_Option {
  sku                                          String
  country                                      CountryCode
  optionName                                   String
  // Define foreign key relationship to RegionalProductData table
  RegionalProductData                          RegionalProductData                            @relation(fields: [sku, country], references: [sku, country])
  // Define one-to-many relationship with RegionalProductData_Bundle_Option_Selection table
  RegionalProductData_Bundle_Option_Selection RegionalProductData_Bundle_Option_Selection[]

  // Define composite primary key
  @@id([sku, country, optionName])
  @@unique([sku, country, optionName])
}

// This is where regional product bundle option selections data when `productType: 'bundle'` is stored. This table closely resembles type CartItemOptionSelection in `types/AppData/LeonPaulProduct/LeonPaulProduct.ts`
model RegionalProductData_Bundle_Option_Selection {
  sku                               String
  country                           CountryCode
  optionName                        String
  selectionName                     String
  selectionId                       String
  price_beforeTax                   Float
  price_afterTax                    Float
  // Define foreign key relationship to RegionalProductData table
  RegionalProductData_Bundle_Option RegionalProductData_Bundle_Option @relation(fields: [sku, country, optionName], references: [sku, country, optionName])

  // Define composite primary key
  @@id([sku, country, optionName, selectionId])
  @@unique([sku, country, optionName, selectionId])
}
